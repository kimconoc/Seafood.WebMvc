@using Domain.Constant;
@using Domain.Extentions;
@using Domain.Enums;
@using Domain.Models.ResponseModel;
@{
    Layout = "~/Views/Shared/_LayoutAccountManager.cshtml";
}
@model List<Addresse>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/assets/css/demo/account-manager/address-list.css" rel="stylesheet" />
    <style>
        /*ghi đè class*/
    </style>
</head>

<body>
    <div class="container-address-list">
        <div class="heading">
            <h3>Sổ địa chỉ</h3>
        </div>
        <div class="box-add-new-address">
            <i class="fa-regular fa-plus"></i>
            <span>Thêm địa chỉ mới</span>
        </div>
        @{
            var obj = Model.FirstOrDefault(x => x.IsAddressMain);
            var strTypeAddress = string.Empty;
            if (obj != null)
            {
                <div class="box-address-active box-address">
                    <div class="name">
                        <span>@obj.FullName</span>
                        <span class="default-address">Địa chỉ được giao hàng</span>
                    </div>
                    <div class="content">
                        <span>
                            Địa chỉ:
                            <strong>
                                @switch (obj.TypeAddress)
                                {
                                    case (int)TypeAddressEnum.NhaRieng:
                                        strTypeAddress = TypeAddressEnum.NhaRieng.GetDescription();
                                        break;
                                    case (int)TypeAddressEnum.CoQuan:
                                        strTypeAddress = TypeAddressEnum.CoQuan.GetDescription();
                                        break;
                                    default:
                                        break;
                                }
                                @strTypeAddress
                            </strong>
                            @string.Format(obj.Address + ", " + obj.NameWard + ", " + obj.NameDistrict + ", " + obj.NameRegion)
                        </span>
                        <span>
                            Số điện thoại: @obj.Mobile
                        </span>
                    </div>
                    <div class="click-continue">
                        <button id="@obj.Id" onclick="editAddress(this)" class="btn-core">Sửa</button>
                    </div>
                </div>
            }
        }
        @foreach (var item in Model)
        {
            strTypeAddress = string.Empty;
            if (!item.IsAddressMain)
            {
                <div class="box-address">
                    <div class="name">
                        <span>@item.FullName</span>
                    </div>
                    <div class="content">
                        <span>
                            Địa chỉ:
                            <strong>
                                @switch (item.TypeAddress)
                                {
                                    case (int)TypeAddressEnum.NhaRieng:
                                        strTypeAddress = TypeAddressEnum.NhaRieng.GetDescription();
                                        break;
                                    case (int)TypeAddressEnum.CoQuan:
                                        strTypeAddress = TypeAddressEnum.CoQuan.GetDescription();
                                        break;
                                    default:
                                        break;
                                }
                                @strTypeAddress
                            </strong>
                            @string.Format(item.Address + ", " + item.NameWard + ", " + item.NameDistrict + ", " + item.NameRegion)
                        </span>
                        <span>
                            Số điện thoại: @item.Mobile
                        </span>
                    </div>
                    <div class="click-continue">
                        <button id="@item.Id" onclick="editAddress(this)" class="btn-core">Sửa</button>
                        <button id="@item.Id" onclick="deleteAddress(this)" class="btn-core-delete">Xóa</button>
                    </div>
                </div>
            }
        }
        @if (Model.Count == 0)
        {
            <div class="box-no-data-found">
                <img src="@Constant.Link_Empty_Order">
                <span>Không có địa chỉ</span>
            </div>
        }
    </div>
    <script>
        //Setup
        //Setup
        $(document).ready(function () {
        });

        $('.box-add-new-address').click(function (e) {
            var dom = this;
            window.location = "/Address/AddressAdd";
        });
        function editAddress(dom) {
            var id = dom.id;
            window.location = "/Address/AddressEdit?addressId=" + id;
        }
        function deleteAddress(dom)
        {
            var addressId = dom.id;
            var prompt = new PromptBoxes();
            prompt.confirm((isConfirm) => executeConfirm(isConfirm, addressId), 'Bạn muốn xóa địa chỉ này?', 'Đồng ý', 'Hủy bỏ');
        }
        function executeConfirm(isConfirm, addressId)
        {
            if (isConfirm)
            {
                ShowOverlay(true);
                $.ajax({
                    type: "POST",
                    traditional: true,
                    data:
                    {
                        "addressId": addressId,
                    },
                    url: "@Url.Action("DeleteAddress", "Address")",
                    success: function (data)
                    {
                        hideOverlay();
                        if (data.Success && data.Data) {
                            awesomeAlert({
                                header: true,
                                type: 'success',
                                title: 'Thành công!',
                                message: 'Xóa địa chỉ thành công.',
                                //bgColor: '#2dd284',
                                img: '/assets/images/icon/success.svg',
                                buttonOK: 'Xong!',
                                closeStyle: 'circle'
                            }).then(res => window.location = "/Address/AddressList")
                        }
                        else {
                            awesomeAlert({
                                header: true,
                                type: 'error',
                                title: 'Đã có lỗi!',
                                message: data.Message,
                                //bgColor: '#2dd284',
                                img: '/assets/images/icon/error.svg',
                                buttonOK: 'Oke!',
                                closeStyle: 'circle'
                            }).then(res => false)
                        }
                    },
                })
            }
        }
    </script>
</body>
</html>
