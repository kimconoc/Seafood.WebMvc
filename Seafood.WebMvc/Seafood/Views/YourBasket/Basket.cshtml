@using Service.Helpers;
@using System.Globalization;
@using Domain.Constant;
@using Domain.Enums;
@using Domain.Extentions;
@using Domain.Models.ResponseModel;
@using Seafood.Models;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var masterDataHelper = new MasterDataHelper();
    var listSeafoodPromotion = masterDataHelper.GetListSeafoodPromotion();
    var address = (Addresse)ViewBag.Address;

    UserData user = null;
    List<Voucher> vouchers = new List<Voucher>();
    try
    {
        var httpContextBase = new HttpContextWrapper(HttpContext.Current);
        user = Seafood.MemCached.Authenticator.CurrentUser(httpContextBase);
        if (user != null)
        {
            vouchers = masterDataHelper.GetVoucherByUserId(user.UserId);
        }
    }
    catch
    {

    }
}
@model List<Basket>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/assets/css/demo/basket.css" rel="stylesheet" />
    <style>
        /*ghi đè class*/
        a:focus {
            outline: none;
            outline-offset: 0;
        }

        .popover-title {
            background-color: #dee8fc;
        }
    </style>
</head>

<body>
    <div class="container-basket">
        <div class="main-title">
            <h1>GIỎ HÀNG</h1>
        </div>
        <div class="slim-line">
        </div>
        <div class="basket-detailt-main row">
            <div class="col-md-8 col-sm-12 menu">
                <div class="box-more-promotion">
                    <div class="box-more-promotion-title">
                        <div>
                            ƯU ĐÃI THÊM TỪ SEAFOOD
                        </div>
                        <div>
                            <span data-toggle="collapse" data-target="#showSeafoodPromotion">Mở rộng</span>
                            <i id="showSeafoodPromotion_icon" class="fa fa-angle-double-down"></i>
                        </div>
                    </div>
                    <div id="showSeafoodPromotion" class="collapse">
                        @foreach (var item in listSeafoodPromotion)
                        {
                            <div class="box-more-promotion-content">
                                <div class="box-more-promotion-content-✓">
                                    ✓
                                </div>
                                <div class="box-more-promotion-content-detailt">
                                    @item.Content
                                </div>
                            </div>
                        }
                    </div>
                </div>
                @{
                    if (Model.Count == 0)
                    {
                        <div class="box-no-data-found">
                            <img src="@Constant.Link_Empty_Order">
                            <span>Không có sản phẩm</span>
                        </div>
                    }
                    else
                    {
                        <div class="basket-header">
                            <div id="checkbox_all_item" onclick="checkboxAllItem(this)" style="width: 18px;margin-right:12px;" class="checkbox-fake">
                            </div>
                            <div class="info-prod-basket">
                                @string.Format("Tất cả (" + Model.Count + " sản phẩm)")
                            </div>
                            <div class="price-prod-basket" style="flex: 1.25;">
                                Đơn giá
                            </div>
                            <div style="flex: 1;">
                                Số lượng
                            </div>
                            <div class="price_main-prod-basket" style="flex: 1.25;">
                                Thành tiền
                            </div>
                            <div class="remote-prod-basket" style="width: auto">
                                <i onclick="deleteBasketBySelected()" data-toggle="tooltip" data-placement="top" title="Xóa mục đã chọn" style="font-size: 18px; cursor: pointer;" class="fa-regular fa-trash-can"></i>
                            </div>
                        </div>
                    }
                }
                @{
                    foreach (var item in Model)
                    {
                        <div class="box-basket-content">
                            <div class="basket-content">
                                <div id="@string.Format("checkbox" + item.Id)" onclick="checkboxItem(this)" style="width: 18px;" class="checkbox-fake">
                                </div>
                                <div class="info-prod-basket">
                                    <img id="@string.Format("img" + item.Id)" onclick="pageNavigationProduct(this)" src="https://cdn2.cellphones.com.vn/358x/media/catalog/product/4/h/4h43.png" alt="Alternate Text" />
                                    <div class="info-prod">
                                        <div class="name-prod">
                                            <strong>@item.ProductName</strong>
                                        </div>
                                        <span class="descPromotion">@item.ProductDescription</span>
                                        <div class="linked-undefined">
                                            <strong>@item.ProdProcessingName</strong>
                                            @*<span>30.000 đ</span>*@
                                            <div class="active">
                                                ✓
                                            </div>
                                        </div>
                                        <!-- Popover product-promotion -->
                                        <a class="prod-promotion-popover" data-html="true" data-placement="bottom" data-popover-content="#@item.Id" data-toggle="popover" href="#" data-trigger="focus" tabindex="0">
                                            Khuyến mãi
                                            <i class="fa-sharp fa-solid fa-chevron-down"></i>
                                        </a>
                                    </div>

                                </div>
                                <div class="price-prod-basket" style="flex:1.25;">
                                    <div class="box-info__box-price">
                                        <div class="product__price--show">
                                            @string.Format(new CultureInfo("de-DE"), "{0:N0}", item.PriceSale) đ
                                        </div>
                                        <div class="product__price--through">
                                            @string.Format(new CultureInfo("de-DE"), "{0:N0}", item.Price) đ
                                        </div>
                                    </div>
                                </div>
                                <div class="box-amonnt-prod-basket" style="flex: 1;">
                                    <div class="amonnt-prod-basket">
                                        <i id="@string.Format("final_quantity_reduce" + item.Id)" onclick="finalQuantityReduce(this)" class="fa-solid fa-minus"></i>
                                        <input id="@string.Format("final_quantity" + item.Id)" disabled type="tel" value="1">
                                        <i id="@string.Format("final_quantity_plus" + item.Id)" onclick="finalQuantityPlus(this)" class="fa-regular fa-plus"></i>
                                    </div>
                                </div>
                                <div class="price_main-prod-basket" style="flex: 1.25;">
                                    <div id="@string.Format("final_price" + item.Id)" class="product__final-prices">
                                        @string.Format(new CultureInfo("de-DE"), "{0:N0}", item.PriceSale) đ
                                    </div>
                                </div>
                                <div class="remote-prod-basket" style="width: auto">
                                    <i id="@string.Format("delete_basket_by_item" + item.Id)" onclick="deleteBasketByItem(this)" style="font-size: 17px; cursor: pointer;" class="fa-regular fa-trash-can"></i>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>

            <div class="col-md-4 col-sm-12">
                <div class="box-address-ship">
                    <div class="block-header">
                        <h4 class="block-header__title">Giao tới</h4>
                        <a class="block-header__nav" href="/Address/AddressList">Thay đổi</a>
                    </div>
                    @{
                        var strTypeAddress = string.Empty;
                        if (address != null)
                        {
                            <div class="customer_info">
                                <span>@address.FullName</span>
                                <span>@address.Mobile</span>
                            </div>
                            <div class="address">
                                <strong>
                                    @switch (address.TypeAddress)
                                    {
                                        case (int)TypeAddressEnum.NhaRieng:
                                            strTypeAddress = TypeAddressEnum.NhaRieng.GetDescription();
                                            break;
                                        case (int)TypeAddressEnum.CoQuan:
                                            strTypeAddress = TypeAddressEnum.CoQuan.GetDescription();
                                            break;
                                        default:
                                            break;
                                    }
                                    @strTypeAddress
                                </strong>
                                @string.Format(address.Address + ", " + address.NameWard + ", " + address.NameDistrict + ", " + address.NameRegion)
                            </div>
                        }
                        else
                        {
                            <div class="customer_info">
                                <span>@string.Format("Chưa có địa chỉ giao hàng.")</span>
                            </div>
                        }

                    }
                </div>
                <div class="box-your-voucher">
                    <div class="voucher-header">
                        <strong>Voucher</strong>
                        <span>
                            bạn có
                            <strong>@vouchers.Where(x=> x.EndTime > DateTime.Now).Count()</strong>
                            voucher
                        </span>
                    </div>
                    <div class="show-more-voucher show-more">
                        <div>
                            <i class="fa-solid fa-tags"></i>
                            <strong>Voucher của bạn</strong>
                        </div>
                        <div id="code_voucher_accept" class="voucher">
                            
                        </div>
                    </div>
                </div>
                <div class="box-your-price">
                    <div class="prices__item">
                        <span class="text-price">Tạm tính</span>
                        <span id="temporary_price" class="number-price">0 đ</span>
                    </div>
                    <div class="prices__item">
                        <span class="text-price-promotion">Giảm giá</span>
                        <span id="discount_price" class="number-price-promotion">0 đ</span>
                    </div>
                    <div class="slim-line">
                    </div>
                    <div style=" margin-top: 10px;" class="prices__item">
                        <span class="text-price-value">Tổng tiền</span>
                        <span id="total_money" class="number-price-value">0 đ</span>
                    </div>
                    <div class="asa-summary-disclaimer">
                        * Seafood sẽ liên hệ với bạn để nắm được các chính sách kèm theo khi mua sản phẩm.
                    </div>
                </div>
                <div class="order-add-to-cart">
                    <button>
                        <strong id="number_purchased">MUA NGAY (0)</strong> <br />
                        <span>(Giao tận nơi hoặc lấy tại cửa hàng)</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
    <!--Content Popover product-promotion -->
    @{
        foreach (var item in Model)
        {
            <div class="hidden d-none" id="@item.Id">
            </div>
        }
    }
    @*Popup modal add voucher*@
    <div class="modal" tabindex="-1" role="dialog" id="modalVoucher">
        <div class="modal-popup modal-dialog" role="document">
            <div class="modal-content">
                <button style="margin-top:-18px;" class="aria-hidden close" aria-label="Close" onclick="CloseModalVoucher()">
                    <span style="margin-right: 5px; font-size: 28px;" aria-hidden="true">&times;</span>
                </button>
                @{
                    if (vouchers != null && vouchers.Any())
                    {
                        var voucher0 = vouchers.Where(x => x.EndTime > DateTime.Now && x.TypeVoucher == 1);
                        if (voucher0 != null && voucher0.Any())
                        {
                            foreach (var item0 in voucher0)
                            {
                                <div class="container-voucher">
                                    <div class="head">
                                        <div class="voucher-active voucher">
                                            <span>@string.Format("Giảm {0}k", item0.ReductionAmount / 1000)</span>
                                        </div>
                                    </div>
                                    <div class="content">
                                        <strong>@item0.Title</strong> <br /><br />
                                        <span>*</span>
                                        <span>@item0.Note</span>
                                    </div>
                                    <div class="box-footer">
                                        <div class="footer">
                                            <p>Mã đơn hàng: <span class="promo">@item0.Code</span></p>
                                            <p class="expire">@string.Format("Hết hạn: {0}/{1}/{2}", @item0.EndTime.Day, @item0.EndTime.Month, @item0.EndTime.Year)</p>
                                        </div>
                                        <div id="@item0.Id" onclick="acceptVoucher(this)" class="btn-core-accept">
                                            Áp dụng
                                        </div>
                                    </div>

                                </div>
                            }

                        }

                        var voucher1 = vouchers.Where(x => x.EndTime > DateTime.Now && x.TypeVoucher == 0);
                        if (voucher1 != null && voucher1.Any())
                        {
                            foreach (var item1 in voucher1)
                            {
                                <div class="container-voucher">
                                    <div class="head">
                                        <div class="voucher-active voucher">
                                            <span>@string.Format("Giảm {0}k", item1.ReductionAmount / 1000)</span>
                                        </div>
                                    </div>
                                    <div class="content">
                                        <strong>@item1.Title</strong> <br /><br />
                                        <span>*</span>
                                        <span>@item1.Note</span>
                                    </div>
                                    <div class="box-footer">
                                        <div class="footer">
                                            <p>Mã đơn hàng: <span class="promo">@item1.Code</span></p>
                                            <p class="expire">@string.Format("Hết hạn: {0}/{1}/{2}", @item1.EndTime.Day, @item1.EndTime.Month, @item1.EndTime.Year)</p>
                                        </div>
                                        <div id="@item1.Id" onclick="acceptVoucher(this)" class="btn-core-accept">
                                            Áp dụng
                                        </div>
                                    </div>

                                </div>
                            }

                        }

                        foreach (var item in vouchers)
                        {
                            if (item.EndTime < DateTime.Now)
                            {
                                <div class="container-voucher">
                                    <div class="head">
                                        <div class="voucher">
                                            <span>@string.Format("Giảm {0}k", item.ReductionAmount / 1000)</span>
                                        </div>
                                    </div>
                                    <div class="content">
                                        <strong>@item.Title</strong> <br /><br />
                                        <span>*</span>
                                        <span>@item.Note</span>
                                    </div>
                                    <div class="box-footer">
                                        <div class="footer">
                                            <p>Mã đơn hàng: <span class="promo">@item.Code</span></p>
                                            <p class="expire">@string.Format("Đã hết hạn: {0}/{1}/{2}", @item.EndTime.Day, @item.EndTime.Month, @item.EndTime.Year)</p>
                                        </div>
                                    </div>

                                </div>
                            }
                        }
                    }
                    else
                    {
                        <div class="box-no-data-found">
                            <img src="@Constant.Link_Empty_Order">
                            <span>Không có voucher nào</span>
                        </div>
                    }
                }

            </div>
        </div>
    </div>
    <script>

        var modal = document.getElementById("modalVoucher");
        var voucher = {};
        var numberPurchased = 0;

        $(document).ready(function () {
            showProductPromotion();
            $(function () {
                $("[data-toggle=popover]").popover({
                    html: true,
                    content: function (e) {
                        var content = $(this).attr("data-popover-content");
                        return $(content).children(".popover-body").html();
                    },
                    title: function (e) {
                        var title = $(this).attr("data-popover-content");
                        return $(title).children(".popover-heading").html();
                    }
                });

            });

            $('.prod-promotion-popover').click(function (e) {
                e.preventDefault(); return true;
            });
        });
        $('.box-more-promotion-title div span').click(function (e) {
            var dom = this;
            if (dom.innerHTML.indexOf('Mở rộng') >= 0) {
                dom.innerText = "Thu lại";
                const element = document.getElementById("showSeafoodPromotion_icon");
                element.className = "fa fa-angle-double-up";
            }
            else {
                dom.innerText = "Mở rộng";
                const element = document.getElementById("showSeafoodPromotion_icon");
                element.className = "fa fa-angle-double-down";
            }
        });

        $('.show-more-voucher').click(function (e) {
            modal.style.display = "flex";
        });
        function CloseModalVoucher() {
            modal.style.display = "none";
        }
        function acceptVoucher(dom) {
            var vouchers = @Html.Raw(Json.Encode(vouchers));
            for (var i = 0; i < vouchers.length; i++) {
                if (dom.id == vouchers[i].Id) {
                    voucher = vouchers[i];
                    var doc = document.getElementById('code_voucher_accept');
                    doc.style.display = "flex";
                    doc.innerText = voucher.Code;
                    document.getElementById('discount_price').innerText = fomatToTypeMoney(voucher.ReductionAmount);
                    modal.style.display = "none";
                    var content = "Áp dụng mã voucher " + voucher.Code + " thành công!";
                    showToasinette_Success_Top_Right(content);
                    break;
                }
            }
            calculateTotalAmount();
        }

        function pageNavigationProduct(dom) {
            var model = @Html.Raw(Json.Encode(Model));
            for (var i = 0; i < model.length; i++) {
                if (dom.id.indexOf(model[i].Id) >= 0) {
                    window.location = "/ProdDetailt/Detailt?prodId=" + model[i].ProductId;
                    break;
                }
            }
        }
        function showProductPromotion() {
            var model = @Html.Raw(Json.Encode(Model));
            for (var i = 0; i < model.length; i++) {
                $.ajax({
                    type: "POST",
                    traditional: true,
                    async: false,
                    data:
                    {
                        "prodId": model[i].ProductId,
                    },
                    url: "@Url.Action("GetListPromotionByProdId", "MasterData")",
                    success: function (data)
                    {
                        if (data.Data != null && data.Success)
                        {
                            var htmlPopover = "<div class='popover-heading'>";
                            htmlPopover = htmlPopover + "Khuyến mãi từ sản phẩm";
                            htmlPopover = htmlPopover + "</div>";
                            htmlPopover = htmlPopover + "<div class='popover-body'>";

                            var index = 0;
                            for (var j = 0; j < data.Data.length; j++)
                            {
                                index = index + 1;
                                htmlPopover = htmlPopover + "<div class='box-product-promotion-content'>";
                                htmlPopover = htmlPopover + "<div class='box-product-promotion-number'>";
                                htmlPopover = htmlPopover + index;
                                htmlPopover = htmlPopover + "</div>";
                                htmlPopover = htmlPopover + "<div class='box-product-promotion-detail'>";
                                htmlPopover = htmlPopover + data.Data[j].Content;
                                htmlPopover = htmlPopover + "</div>";
                                htmlPopover = htmlPopover + "</div>";
                            }

                            htmlPopover = htmlPopover + "</div>";
                            const element = document.getElementById(model[i].Id);
                            element.innerHTML = htmlPopover;
                        }
                    },
                })
            }
        }

        function finalQuantityReduce(dom) {
            var idBasket;
            var finalQuantityId;

            var model = @Html.Raw(Json.Encode(Model));
            for (var i = 0; i < model.length; i++) {
                if (dom.id.indexOf(model[i].Id) >= 0) {
                    idBasket = model[i].Id;
                    finalQuantityId = "final_quantity" + model[i].Id;
                    break;
                }
            }
            var quantity = document.getElementById(finalQuantityId).value;
            if (Number(quantity) <= 1) {
                return;
            }
            quantity = Number(quantity) - 1;
            document.getElementById(finalQuantityId).value = quantity;
            updateAmount(quantity, idBasket);

            calculateTotalAmount()
        }
        function finalQuantityPlus(dom) {
            var idBasket;
            var finalQuantityId;

            var model = @Html.Raw(Json.Encode(Model));
            for (var i = 0; i < model.length; i++) {
                if (dom.id.indexOf(model[i].Id) >= 0) {
                    idBasket = model[i].Id;
                    finalQuantityId = "final_quantity" + model[i].Id;
                    break;
                }
            }
            var quantity = document.getElementById(finalQuantityId).value;
            if (Number(quantity) >= 99) {
                return;
            }
            quantity = Number(quantity) + 1;
            document.getElementById(finalQuantityId).value = quantity;
            updateAmount(quantity, idBasket);

            calculateTotalAmount()
        }
        function updateAmount(quantity,idBasket) {
            var finalPriceId = "final_price" + idBasket;
            var model = @Html.Raw(Json.Encode(Model));
            for (var i = 0; i < model.length; i++) {
                if (model[i].Id.indexOf(idBasket) >= 0)
                {
                    const element = document.getElementById(finalPriceId);
                    element.innerHTML = fomatToTypeMoney(Number(model[i].PriceSale) * quantity);
                    break;
                }
            }
        }

        function checkboxAllItem(dom)
        {
            var element = document.getElementById(dom.id);
            var model = @Html.Raw(Json.Encode(Model));
            if (dom.className.indexOf("checkbox-active") >= 0)
            {
                element.classList.remove('checkbox-active');
                element.innerHTML = "";
                for (var i = 0; i < model.length; i++)
                {
                    var idCheck = "checkbox" + model[i].Id;
                    var ele = document.getElementById(idCheck);
                    ele.classList.remove('checkbox-active');
                    ele.innerHTML = "";
                }
            }
            else
            {
                element.classList.add('checkbox-active');
                element.innerHTML = "✓";
                for (var i = 0; i < model.length; i++) {
                    var idCheck = "checkbox" + model[i].Id;
                    var ele = document.getElementById(idCheck);
                    ele.classList.add('checkbox-active');
                    ele.innerHTML = "✓";
                }
            }

            calculateTotalAmount()
        }
        function checkboxItem(dom) {
            var element = document.getElementById(dom.id);
            var model = @Html.Raw(Json.Encode(Model));
            if (dom.className.indexOf("checkbox-active") >= 0) {
                element.classList.remove('checkbox-active');
                element.innerHTML = "";
            }
            else {
                element.classList.add('checkbox-active');
                element.innerHTML = "✓";
            }
            var index = 0;
            for (var i = 0; i < model.length; i++)
            {
                var idCheck = "checkbox" + model[i].Id;
                var ele = document.getElementById(idCheck);
                if (ele.className.indexOf("checkbox-active") >= 0) {
                    index = index + 1;
                }
            }
            var eleAllItem = document.getElementById('checkbox_all_item');
            if (index == model.length) {
                eleAllItem.classList.add('checkbox-active');
                eleAllItem.innerHTML = "✓";
            }
            else {
                eleAllItem.classList.remove('checkbox-active');
                eleAllItem.innerHTML = "";
            }

            calculateTotalAmount();
        }

        function deleteBasketBySelected() {
            var lstBasket = [];
            var model = @Html.Raw(Json.Encode(Model));
            for (var i = 0; i < model.length; i++) {
                var idCheck = "checkbox" + model[i].Id;
                var ele = document.getElementById(idCheck);
                if (ele.className.indexOf("checkbox-active") >= 0) {
                    lstBasket.push(model[i].Id);
                }
            }
            if (lstBasket.length > 0) {
                var prompt = new PromptBoxes();
                prompt.confirm((isConfirm) => executeDeleteBasket(isConfirm, lstBasket), 'Bạn muốn xóa sản phẩm này?', 'Đồng ý', 'Hủy bỏ');
            }
            else {
                showToasinette_Error_Top_Right('Chưa có mục nào được chọn');
            }
        }
        function deleteBasketByItem(dom) {
            var lstBasket = [];
            var model = @Html.Raw(Json.Encode(Model));
            for (var i = 0; i < model.length; i++) {
                if (dom.id.indexOf(model[i].Id) >= 0) {
                    lstBasket.push(model[i].Id);
                    break;
                }
            }
            if (lstBasket.length > 0) {
                var prompt = new PromptBoxes();
                prompt.confirm((isConfirm) => executeDeleteBasket(isConfirm, lstBasket), 'Bạn muốn xóa sản phẩm này?', 'Đồng ý', 'Hủy bỏ');
            }
            else {
                showToasinette_Error_Top_Right('Chưa có mục nào được chọn');
            }
        }
        function executeDeleteBasket(isConfirm, lstBasket) {
            if (isConfirm) {
                $.ajax({
                    type: "POST",
                    traditional: true,
                    async: false,
                    data:
                    {
                        "lstBasket": lstBasket,
                    },
                    url: "@Url.Action("ExecuteDeleteBasket", "YourBasket")",
                    success: function (data)
                    {
                        if (data.Success && data.Data) {
                            awesomeAlert({
                                header: true,
                                type: 'success',
                                title: 'Thành công!',
                                message: 'Xóa sản phẩm thành công.',
                                //bgColor: '#2dd284',
                                img: '/assets/images/icon/success.svg',
                                buttonOK: 'Xong!',
                                closeStyle: 'circle'
                            }).then(res => window.location.reload())
                        }
                        else {
                            var message = "Đã có lỗi xảy ra."
                            if (!isNullOrEmpty(data.Message)) {
                                message = data.Message;
                            }
                            awesomeAlert({
                                header: true,
                                type: 'error',
                                title: 'Có lỗi!',
                                message: message,
                                //bgColor: '#2dd284',
                                img: '/assets/images/icon/error.svg',
                                buttonOK: 'Oke!',
                                closeStyle: 'circle'
                            }).then(res => false)
                        }
                    },
                })
            }
        }

        function calculateTotalAmount() {
            numberPurchased = 0;
            var total = 0;
            var model = @Html.Raw(Json.Encode(Model));
            for (var i = 0; i < model.length; i++) {
                var idCheck = "checkbox" + model[i].Id;
                var ele = document.getElementById(idCheck);
                if (ele.className.indexOf("checkbox-active") >= 0) {
                    numberPurchased = numberPurchased + 1;
                    var finalPriceId = "final_price" + model[i].Id;
                    var price = document.getElementById(finalPriceId).innerHTML.replace('đ', '').replaceAll('.', '').trim();
                    total = total + Number(price);
                }
            }

            const eleTemporaryPrice = document.getElementById('temporary_price');
            eleTemporaryPrice.innerHTML = fomatToTypeMoney(Number(total));
            var discountPrice = document.getElementById('discount_price').innerHTML.replace('đ', '').replaceAll('.', '').trim();
            if (total > discountPrice) {
                total = total - Number(discountPrice);
            }
            else {
                total = 0;
            }
            const eleTotalMoney = document.getElementById('total_money');
            eleTotalMoney.innerHTML = fomatToTypeMoney(Number(total));

            const eleNumberPurchased = document.getElementById('number_purchased');
            eleNumberPurchased.innerHTML = "MUA NGAY (" + numberPurchased + ")";
        }

        $('.order-add-to-cart').click(function (e) {
            if (numberPurchased == 0) {
                showToasinette_Error_Top_Right('Bạn chưa tích chọn sản phẩm.');
                return;
            }
            debugger
            var orders = [];
            var model = @Html.Raw(Json.Encode(Model));
            for (var i = 0; i < model.length; i++) {
                var idCheck = "checkbox" + model[i].Id;
                var ele = document.getElementById(idCheck);
                if (ele.className.indexOf("checkbox-active") >= 0)
                {
                    var finalQuantityId = "final_quantity" + model[i].Id;

                    var userId = @Html.Raw(Json.Encode(user.UserId));
                    var productId = model[i].ProductId;
                    var prodProcessingId = model[i].ProdProcessingId;
                    var codeVoucher = voucher.Code;
                    var typeVoucher = voucher.TypeVoucher;
                    var quantity = document.getElementById(finalQuantityId).value;
                    var totalPrice = document.getElementById('total_money').innerHTML.replace('đ', '').replaceAll('.', '').trim();
                    var order = {
                        UserId: userId,
                        ProductId: productId,
                        ProdProcessingId: prodProcessingId,
                        CodeVoucher: codeVoucher,
                        TypeVoucher: typeVoucher,
                        Quantity: quantity,
                        TotalPrice: totalPrice,
                    };

                    orders.push(order);
                }
            }
            if (orders.length == 0) {
                showToasinette_Error_Top_Right('Chưa có sản phẩm nào được chọn.');
                return;
            }

            $.ajax({
                    type: "POST",
                    traditional: true,
                    async: false,
                    data:
                    {
                        "orders": orders,
                    },
                    url: "@Url.Action("CreateOrderUserId", "YourBasket")",
                    success: function (data)
                    {
                        if (data.Success && data.Data) {
                            awesomeAlert({
                                header: true,
                                type: 'success',
                                title: 'Thành công!',
                                message: 'Xóa sản phẩm thành công.',
                                //bgColor: '#2dd284',
                                img: '/assets/images/icon/success.svg',
                                buttonOK: 'Xong!',
                                closeStyle: 'circle'
                            }).then(res => window.location.reload())
                        }
                        else {
                            var message = "Đã có lỗi xảy ra."
                            if (!isNullOrEmpty(data.Message)) {
                                message = data.Message;
                            }
                            awesomeAlert({
                                header: true,
                                type: 'error',
                                title: 'Có lỗi!',
                                message: message,
                                //bgColor: '#2dd284',
                                img: '/assets/images/icon/error.svg',
                                buttonOK: 'Oke!',
                                closeStyle: 'circle'
                            }).then(res => false)
                        }
                    },
                })
        });

    </script>
</body>
</html>
